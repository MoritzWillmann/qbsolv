version: 2
jobs:
  test-3.9: &full-test-template
    docker:
      - image: circleci/python:3.9

    working_directory: ~/repo

    steps:

      - checkout

      - restore_cache: &restore-cache-env
          keys:
          - v3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run: &install-dependencies
          name: install dependencies
          command: |
            . env/bin/activate
            python --version
            pip install -r requirements.txt -r tests/requirements.txt

      - save_cache: &save-cache-env
          paths:
            - ./env
          key: v3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: &install-package
          name: install package
          command: |
            . env/bin/activate
            python setup.py build_ext --inplace
            pip install .
        
      - run: &run-tests
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            coverage run -m unittest discover

      - store_artifacts:
          path: ./htmlcov

      - run:
          name: codecov
          command: |
            . env/bin/activate
            codecov

  test-3.8:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.8

  test-3.7:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.7

  test-3.6:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.6

  test-osx-3.9: &osx-tests-template
    macos:
      xcode: "12.2.0"
    environment:
      PYTHON: 3.9.0
      HOMEBREW_NO_AUTO_UPDATE: 1

      # Force (lie about) macOS 10.9 binary compatibility.
      # Needed for properly versioned wheels.
      # See: https://github.com/MacPython/wiki/wiki/Spinning-wheels
      MACOSX_DEPLOYMENT_TARGET: 10.9

    working_directory: ~/repo

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache: &restore-cache-pyenv
          keys:
            - v3-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.2.0

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache: &save-cache-pyenv
          paths:
            - ~/.pyenv
          key: v3-pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.2.0

      - run: &create-virtualenv-pyenv
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      - restore_cache: *restore-cache-env

      - run: *install-dependencies

      - save_cache: *save-cache-env

      - run: *install-package
        
      - run: *run-tests

  test-osx-3.8:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.8.6
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9

  test-osx-3.7:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.7.9
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9

  test-osx-3.6:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.6.12
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9

##################################################################################################
# Deploy
##################################################################################################

  build-manylinux-64: &manylinux-template
    docker:
      - image: quay.io/pypa/manylinux1_x86_64

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: build wheels
          command: |
            for PYBIN in /opt/python/*/bin; do
              "${PYBIN}/python" -c "import sys; sys.exit((3,6)<=sys.version_info<(3,10))" && continue
              "${PYBIN}/pip" install -r requirements.txt -r tests/requirements.txt
              "${PYBIN}/pip" wheel . -w ./wheelhouse
              "${PYBIN}/python" setup.py sdist -d ./dist
            done

      - run:
          name: bundle shared libraries into wheels
          command: |
            for whl in ./wheelhouse/dwave*qbsolv*.whl; do
              auditwheel repair "$whl" -w ./dist
            done

      - store_artifacts:
          path: ./dist

      - run:
          name: create a virtualenv
          command: |
            pythons=(/opt/python/*/bin)
            python="${pythons[0]}"
            "$python/pip" install virtualenv
            "$python/python" -m virtualenv env

      - run: &upload-pypi
          name: install twine and deploy
          command: |
            . env/bin/activate
            pip install twine
            twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" --skip-existing ./dist/*

  build-manylinux-32:
    <<: *manylinux-template
    docker:
      - image: quay.io/pypa/manylinux1_i686

  build-osx-3.9: &osx-build-template
    macos:
      xcode: "12.2.0"
    environment:
      PYTHON: 3.9.0
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9

    working_directory: ~/repo

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache: *restore-cache-pyenv

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache: *save-cache-pyenv

      - run: *create-virtualenv-pyenv

      - run: *install-dependencies

      - run: *install-package
        
      - run:
          name: create bdist_wheel
          command: |
            . env/bin/activate
            python setup.py bdist_wheel

      - store_artifacts:
          path: ./dist

      - run: *upload-pypi

  build-osx-3.8:
    <<: *osx-build-template
    environment:
      PYTHON: 3.8.6
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9

  build-osx-3.7:
    <<: *osx-build-template
    environment:
      PYTHON: 3.7.9
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9

  build-osx-3.6:
    <<: *osx-build-template
    environment:
      PYTHON: 3.6.12
      HOMEBREW_NO_AUTO_UPDATE: 1
      MACOSX_DEPLOYMENT_TARGET: 10.9


workflows:
  version: 2
  test:
    jobs:
      - test-3.9
      - test-3.8
      - test-3.7
      - test-3.6
      - test-osx-3.9
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6

  deploy:
    jobs:
      - build-manylinux-64:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-manylinux-32:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.9:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.8:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.7:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - build-osx-3.6:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
